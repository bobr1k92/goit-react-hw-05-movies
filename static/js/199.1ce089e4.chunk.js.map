{"version":3,"file":"static/js/199.1ce089e4.chunk.js","mappings":"6MAoEA,UAvDiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbE,EAAU,YAEVE,EAAAA,EAAAA,MACGC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPR,EAAUQ,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLP,EAAU,QACX,IACAQ,SAAQ,WACPV,GAAa,EACd,GACJ,GAAE,IAEY,SAAXC,GAAqBF,EAChBA,IAAa,SAAC,IAAD,CAAQA,UAAWA,IAG1B,UAAXE,GACK,sDAIP,+BACE,UAAC,IAAD,YACE,SAAC,KAAD,uCACA,SAAC,KAAD,UACGJ,EAAOc,KAAI,SAAAC,GAAI,OACd,SAAC,KAAD,WACE,UAAC,KAAD,CAAWC,GAAE,iBAAYD,EAAKE,IAA9B,WACE,SAAC,KAAD,CACEC,IAAG,yDAAoDH,EAAKI,aAC5DC,IAAKL,EAAKM,OAASN,EAAKO,KACxBC,MAAM,MACNC,OAAO,SAET,SAAC,KAAD,WACE,4BAAST,EAAKM,OAASN,EAAKO,aATlBP,EAAKE,GADP,UAmBzB,C,uNC/DYQ,EAAYC,EAAAA,GAAAA,GAAH,wGAOTC,EAAYD,EAAAA,GAAAA,GAAH,yWAgBTE,EAAaF,EAAAA,GAAAA,GAAH,sEAKVG,EAAaH,EAAAA,GAAAA,IAAH,wGAMVI,EAAYJ,EAAAA,GAAAA,EAAH,iIAQTK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6G","sources":["pages/Homepage/Homepage.jsx","pages/Homepage/Homepage.styled.jsx"],"sourcesContent":["import { fetchPopularMovie } from 'components/API/API';\nimport { Container } from 'utils/Container';\nimport { useEffect, useState } from 'react';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieTitle,\n  MovieText,\n  MovieImage,\n} from './Homepage.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Homepage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setIsLoading(true);\n    setStatus('loading');\n\n    fetchPopularMovie()\n      .then(({ data }) => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        setStatus('error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (status === 'idle' || isLoading) {\n    return isLoading && <Loader isLoading={isLoading} />;\n  }\n\n  if (status === 'error') {\n    return <>There was an error</>;\n  }\n\n  return (\n    <>\n      <Container>\n        <MovieTitle>Top-movies of this week</MovieTitle>\n        <MovieList>\n          {movies.map(film => (\n            <MovieItem key={film.id}>\n              <MovieLink to={`movies/${film.id}`}>\n                <MovieImage\n                  src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${film.poster_path}`}\n                  alt={film.title || film.name}\n                  width=\"180\"\n                  height=\"250\"\n                />\n                <MovieText>\n                  <strong>{film.title || film.name}</strong>\n                </MovieText>\n              </MovieLink>\n            </MovieItem>\n          ))}\n        </MovieList>\n      </Container>\n    </>\n  );\n};\n\nexport default Homepage;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 35px;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n\n  border-radius: 5px;\n  transition-property: scale, box-shadow, border-radius;\n  transition-duration: 0.5s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    outline: 3px solid #ff6b01;\n    scale: 1.03;\n    box-shadow: 0 0 15px 5px #7f7676;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MovieImage = styled.img`\n  background: #fff;\n  box-shadow: 0 0 2px 3px #7f7676;\n  margin-bottom: 8px;\n`;\n\nexport const MovieText = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 5px 0;\n  color: black;\n  text-align: center;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 180px;\n`;\n"],"names":["useState","movies","setMovies","isLoading","setIsLoading","status","setStatus","useEffect","fetchPopularMovie","then","data","results","catch","error","finally","map","film","to","id","src","poster_path","alt","title","name","width","height","MovieList","styled","MovieItem","MovieTitle","MovieImage","MovieText","MovieLink","NavLink"],"sourceRoot":""}