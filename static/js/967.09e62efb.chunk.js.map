{"version":3,"file":"static/js/967.09e62efb.chunk.js","mappings":"mPAWaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAAC,KAAD,UACGA,EAAOC,KAAI,SAAAC,GAAI,OACd,SAAC,KAAD,WACE,UAAC,KAAD,CAAWC,GAAE,iBAAYD,EAAKE,IAA9B,WACE,SAAC,KAAD,CACEC,IACEH,EAAKI,YACD,kDACAJ,EAAKI,YAZvB,kHAeYC,IAAKL,EAAKM,OAASN,EAAKO,KACxBC,MAAM,MACNC,OAAO,SAET,SAAC,KAAD,WACE,4BAAST,EAAKM,OAASN,EAAKO,aAdlBP,EAAKE,GADP,KAsBrB,ECUD,EAvCiB,WACf,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,QAArC,eAAOI,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbE,EAAU,YAEVE,EAAAA,EAAAA,MACGC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPR,EAAUQ,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLP,EAAU,QACX,IACAQ,SAAQ,WACPV,GAAa,EACd,GACJ,GAAE,IAEY,SAAXC,GAAqBF,EAChBA,IAAa,SAACY,EAAA,EAAD,CAAQZ,UAAWA,IAG1B,UAAXE,GACK,sDAIP,+BACE,UAACW,EAAA,EAAD,YACE,SAAC,KAAD,uCACA,SAAC5B,EAAD,CAAYC,OAAQA,QAI3B,C,uNCzCY4B,EAAYC,EAAAA,GAAAA,GAAH,wGAOTC,EAAYD,EAAAA,GAAAA,GAAH,yWAgBTE,EAAaF,EAAAA,GAAAA,GAAH,sEAKVG,EAAaH,EAAAA,GAAAA,IAAH,wGAMVI,EAAYJ,EAAAA,GAAAA,EAAH,iIAQTK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6G","sources":["pages/MovieItem/MovieItem.jsx","pages/Homepage/Homepage.jsx","pages/Homepage/Homepage.styled.jsx"],"sourcesContent":["import {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieText,\n  MovieImage,\n} from 'pages/Homepage/Homepage.styled';\n\nconst defaultImg =\n  'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n\nexport const MoviesItem = ({ movies }) => {\n  return (\n    <MovieList>\n      {movies.map(film => (\n        <MovieItem key={film.id}>\n          <MovieLink to={`movies/${film.id}`}>\n            <MovieImage\n              src={\n                film.poster_path\n                  ? 'https://image.tmdb.org/t/p/w300_and_h450_bestv2' +\n                    film.poster_path\n                  : defaultImg\n              }\n              alt={film.title || film.name}\n              width=\"180\"\n              height=\"250\"\n            />\n            <MovieText>\n              <strong>{film.title || film.name}</strong>\n            </MovieText>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n","import { fetchPopularMovie } from 'services/API';\nimport { Container } from 'utils/Container';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesItem } from 'pages/MovieItem/MovieItem';\nimport { MovieTitle } from './Homepage.styled';\n\nconst Homepage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setIsLoading(true);\n    setStatus('loading');\n\n    fetchPopularMovie()\n      .then(({ data }) => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        setStatus('error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (status === 'idle' || isLoading) {\n    return isLoading && <Loader isLoading={isLoading} />;\n  }\n\n  if (status === 'error') {\n    return <>There was an error</>;\n  }\n\n  return (\n    <>\n      <Container>\n        <MovieTitle>Top-movies of this week</MovieTitle>\n        <MoviesItem movies={movies} />\n      </Container>\n    </>\n  );\n};\n\nexport default Homepage;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 35px;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n\n  border-radius: 5px;\n  transition-property: scale, box-shadow, border-radius;\n  transition-duration: 0.5s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    outline: 3px solid #ff6b01;\n    scale: 1.03;\n    box-shadow: 0 0 15px 5px #7f7676;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MovieImage = styled.img`\n  background: #fff;\n  box-shadow: 0 0 2px 3px #7f7676;\n  margin-bottom: 8px;\n`;\n\nexport const MovieText = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 5px 0;\n  color: black;\n  text-align: center;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 180px;\n`;\n"],"names":["MoviesItem","movies","map","film","to","id","src","poster_path","alt","title","name","width","height","useState","setMovies","isLoading","setIsLoading","status","setStatus","useEffect","fetchPopularMovie","then","data","results","catch","error","finally","Loader","Container","MovieList","styled","MovieItem","MovieTitle","MovieImage","MovieText","MovieLink","NavLink"],"sourceRoot":""}