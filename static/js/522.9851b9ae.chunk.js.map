{"version":3,"file":"static/js/522.9851b9ae.chunk.js","mappings":"uUAGaA,EAAYC,EAAAA,GAAAA,GAAH,wGAOTC,EAAYD,EAAAA,GAAAA,GAAH,yWAgBTE,EAAaF,EAAAA,GAAAA,GAAH,sEAKVG,EAAaH,EAAAA,GAAAA,IAAH,wGAMVI,EAAYJ,EAAAA,GAAAA,EAAH,iIAQTK,GAAYL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6G,wKC3CTO,EAAiBP,EAAAA,GAAAA,IAAH,sEAKdQ,EAAaR,EAAAA,GAAAA,KAAH,6DAKVS,EAAYT,EAAAA,GAAAA,MAAH,oVAkBTU,EAAaV,EAAAA,GAAAA,OAAH,sX,SCpBVW,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OACE,+BACE,SAACC,EAAA,EAAD,WACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAYI,SAVD,SAAAK,GACjBA,EAAEC,iBACFN,EAASE,GACTC,EAAc,GACf,EAMO,WACE,0BACE,SAACN,EAAD,CACEU,KAAK,OACLC,YAAY,yBACZC,MAAOP,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAcE,EAAEM,OAAOF,MAA3B,OAIf,SAACX,EAAD,CAAYS,KAAK,SAAjB,UACE,gBACEK,IAAI,sGACJC,IAAI,SACJC,MAAM,KACNC,OAAO,iBAQtB,E,wBChCYC,EAAQ,WACnB,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACA,GAAkCjB,EAAAA,EAAAA,WAAS,GAA3C,eAAOkB,EAAP,KAAkBC,EAAlB,KACA,GAA4BnB,EAAAA,EAAAA,UAAS,QAArC,eAAOoB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAMzBC,GAAWC,EAAAA,EAAAA,MAEXC,EACkB,MAAtBF,EAASG,SAAmB,mBAAqBH,EAASG,SAqB5D,OAnBAC,EAAAA,EAAAA,YAAU,WACRZ,GAAa,GACbE,EAAU,WAEI,OAAVI,GAIJO,EAAAA,EAAAA,IAAiBP,GACdQ,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcjB,EAAUiB,EAAKC,QAA7B,IAELC,OAAM,SAAAC,GACLhB,EAAU,QACX,IACAiB,SAAQ,WACPnB,GAAa,EACd,IAXDA,GAAa,EAYhB,GAAE,CAACM,IAEW,SAAXL,GAAqBF,EAChBA,IAAa,SAACqB,EAAA,EAAD,CAAQrB,UAAWA,IAG1B,UAAXE,GACK,sDAGP,+BACE,SAACjB,EAAA,EAAD,WACE,iBAAKqC,MAAO,CAAEC,UAAW,KAAzB,WACE,SAAC3C,EAAD,CAAYC,SAvCK,SAAAE,GACvBuB,EAAgB,CAAEC,MAAOxB,GAC1B,KAsCO,SAAC,KAAD,UACGe,EAAO0B,KAAI,SAAAC,GAAI,OACd,SAAC,KAAD,WACE,UAAC,KAAD,CACEC,GAAE,UAAKf,EAAL,YAAoBc,EAAKE,IAC3BC,MAAO,CAAEC,KAAMpB,GAFjB,WAIE,SAAC,KAAD,CACEhB,IAAG,yDAAoDgC,EAAKK,aAC5DpC,IAAK+B,EAAKM,OAASN,EAAKO,KACxBrC,MAAM,MACNC,OAAO,SAET,SAAC,KAAD,WACE,4BAAS6B,EAAKM,OAASN,EAAKO,aAZlBP,EAAKE,GADP,YAuB3B,EAED,G","sources":["pages/Homepage/Homepage.styled.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movie/Movie.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 35px;\n`;\n\nexport const MovieItem = styled.li`\n  display: flex;\n\n  border-radius: 5px;\n  transition-property: scale, box-shadow, border-radius;\n  transition-duration: 0.5s;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border-radius: 5px;\n    outline: 3px solid #ff6b01;\n    scale: 1.03;\n    box-shadow: 0 0 15px 5px #7f7676;\n  }\n`;\n\nexport const MovieTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MovieImage = styled.img`\n  background: #fff;\n  box-shadow: 0 0 2px 3px #7f7676;\n  margin-bottom: 8px;\n`;\n\nexport const MovieText = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 5px 0;\n  color: black;\n  text-align: center;\n`;\n\nexport const MovieLink = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 180px;\n`;\n","import styled from 'styled-components';\n\nexport const SearchFormWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FormSearch = styled.form`\n  display: flex;\n  margin: 20px 0;\n`;\n\nexport const FormInput = styled.input`\n  color: #040407;\n  background: 0 0;\n  border: 0;\n  border-bottom: 0.5px solid #753f3f;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  padding: 7px;\n  font-size: 16px;\n  line-height: 16px;\n  display: flex;\n  &:focus {\n    outline: 1px solid #6f6969;\n    border-radius: 3px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  margin-left: 5px;\n  padding: 5px;\n  background: 0 0;\n  border: 0;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  transition: border-color 0.25s cubic-bezier(0.4, 0, 0.2, 1),\n    border 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border-color: #ff6b01;\n  }\n`;\n","import { useState } from 'react';\nimport { Container } from 'utils/Container';\nimport {\n  FormSearch,\n  SearchFormWrap,\n  FormInput,\n  FormButton,\n} from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const formSubmit = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <>\n      <Container>\n        <SearchFormWrap>\n          <FormSearch onSubmit={formSubmit}>\n            <div>\n              <FormInput\n                type=\"text\"\n                placeholder=\"Enter name of movie...\"\n                value={inputValue}\n                onChange={e => setInputValue(e.target.value)}\n              />\n            </div>\n\n            <FormButton type=\"submit\">\n              <img\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTEipZg-O6T2kLEu2GPEsOlGf4_--3Q74UjTg&usqp=CAU\"\n                alt=\"search\"\n                width=\"30\"\n                height=\"30\"\n              ></img>\n            </FormButton>\n          </FormSearch>\n        </SearchFormWrap>\n      </Container>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchSearchMovie } from 'components/API/API';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport {\n  MovieImage,\n  MovieItem,\n  MovieLink,\n  MovieList,\n  MovieText,\n} from 'pages/Homepage/Homepage.styled';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Container } from 'utils/Container';\n\nexport const Movie = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleFormSubmit = inputValue => {\n    setSearchParams({ query: inputValue });\n  };\n\n  const location = useLocation();\n\n  const currentPage =\n    location.pathname === '/' ? '/movies/:movieId' : location.pathname;\n\n  useEffect(() => {\n    setIsLoading(true);\n    setStatus('loading');\n\n    if (query === null) {\n      setIsLoading(false);\n      return;\n    }\n    fetchSearchMovie(query)\n      .then(({ data }) => setMovies(data.results))\n\n      .catch(error => {\n        setStatus('error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  if (status === 'idle' || isLoading) {\n    return isLoading && <Loader isLoading={isLoading} />;\n  }\n\n  if (status === 'error') {\n    return <>There was an error</>;\n  }\n  return (\n    <>\n      <Container>\n        <div style={{ minHeight: 400 }}>\n          <SearchForm onSubmit={handleFormSubmit} />\n          <MovieList>\n            {movies.map(film => (\n              <MovieItem key={film.id}>\n                <MovieLink\n                  to={`${currentPage}/${film.id}`}\n                  state={{ from: location }}\n                >\n                  <MovieImage\n                    src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${film.poster_path}`}\n                    alt={film.title || film.name}\n                    width=\"180\"\n                    height=\"250\"\n                  />\n                  <MovieText>\n                    <strong>{film.title || film.name}</strong>\n                  </MovieText>\n                </MovieLink>\n              </MovieItem>\n            ))}\n          </MovieList>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["MovieList","styled","MovieItem","MovieTitle","MovieImage","MovieText","MovieLink","NavLink","SearchFormWrap","FormSearch","FormInput","FormButton","SearchForm","onSubmit","useState","inputValue","setInputValue","Container","e","preventDefault","type","placeholder","value","onChange","target","src","alt","width","height","Movie","movies","setMovies","isLoading","setIsLoading","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","currentPage","pathname","useEffect","fetchSearchMovie","then","data","results","catch","error","finally","Loader","style","minHeight","map","film","to","id","state","from","poster_path","title","name"],"sourceRoot":""}